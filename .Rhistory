bivalve_seasonal_species_richness
#abundance
bivalve_seasonal_species_richness <-
bi.wide %>%
group_by(year, month, site) %>%
summarise_at(vars(shan:abundance), mean) %>%
ggplot() +
aes(x = month, y = abundance, colour = site, group = site) +
geom_point() +
ylim(0, 8) +
geom_line() +
theme_bw() +
facet_wrap(~year) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
#legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1))+
labs(x = "Month", y = expression("Richness" ~ "(average species count/site visit)"), title = "Seasonal Species Richness")
bivalve_seasonal_species_richness
View(bi.wide.cor)
View(bi.wide)
#bivalve abundance by tide height and year: effort corrected
bivalve_tidal_abundance <-
bi.long %>%
group_by(year, month, day, site, elevation, quad) %>%
summarise(abundance = sum(abundance_modified, na.rm = TRUE)) %>%
group_by(year, elevation) %>%
ggplot() +
aes(x = elevation, y = abundance, group= elevation) +
geom_boxplot() +
theme_bw() +
facet_wrap(~year) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1))+
labs(x = "tide height (m)", y = expression("Bivalve abundance" ~ "(mean count/quadrat)"), title = "Total Bivalve Abundance by Tide Height")
bivalve_tidal_abundance
#wide data with effort correction
bi.wide.cor <- bi.long %>%
group_by(year, month, day, site, elevation, quad, species) %>%
summarise(abundance = mean(abundance_modified)) %>%
spread("species", "abundance")
#wide data with effort correction
bi.wide <- bi.long %>%
group_by(year, month, day, site, elevation, quad, species) %>%
summarise(abundance = mean(abundance_modified)) %>%
spread("species", "abundance")
#wide data with effort correction
bi.wide <- bi.long %>%
group_by(year, month, day, site, elevation, quad, species) %>%
summarise(abundance = mean(abundance_modified)) %>%
spread("species", "abundance")
#create character for month
bi.wide$month <- factor(bi.wide$month,
levels = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
#new column; shannon H
bi.wide$shan <- diversity(
bi.wide[(which(colnames(bi.wide) == "bama")) :
(which(colnames(bi.wide) == "umac"))],
index = "shannon")
#new column; species abundance
bi.wide$abundance<- specnumber(
bi.wide[(which(colnames(bi.wide) == "bama")) :
(which(colnames(bi.wide) == "umac"))])
bi.wide.2016
bivalve_species_accumulation <-
specaccum(bi.wide[
(which(colnames(bi.wide) == "bama")) :
(which(colnames(bi.wide) == "umac"))]) %>%
plot(ci.type="polygon", ci.col="lightyellow", xlab = "site visits", ylab = "species number")
#abundance
bivalve_seasonal_species_richness <-
bi.wide %>%
group_by(year, month, site) %>%
summarise_at(vars(shan:abundance), mean) %>%
ggplot() +
aes(x = month, y = abundance, colour = site, group = site) +
geom_point() +
ylim(0, 8) +
geom_line() +
theme_bw() +
facet_wrap(~year) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
#legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1))+
labs(x = "Month", y = expression("Richness" ~ "(average species count/site visit)"), title = "Seasonal Species Richness")
bivalve_seasonal_species_richness
#new column; shannon H
bi.wide$shan <- diversity(
bi.wide[(which(colnames(bi.wide) == "bama")) :
(which(colnames(bi.wide) == "umac"))],
index = "shannon")
#new column; species abundance
bi.wide$abundance<- specnumber(
bi.wide[(which(colnames(bi.wide) == "bama")) :
(which(colnames(bi.wide) == "umac"))])
#abundance
bivalve_seasonal_species_richness <-
bi.wide %>%
group_by(year, month, site) %>%
summarise_at(vars(shan:abundance), mean) %>%
ggplot() +
aes(x = month, y = abundance, colour = site, group = site) +
geom_point() +
ylim(0, 8) +
geom_line() +
theme_bw() +
facet_wrap(~year) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
#legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1))+
labs(x = "Month", y = expression("Richness" ~ "(average species count/site visit)"), title = "Seasonal Species Richness")
bivalve_seasonal_species_richness
#abundance
bivalve_seasonal_species_richness <-
bi.wide %>%
group_by(year, month, site) %>%
summarise_at(vars(shan:abundance), mean) %>%
ggplot() +
aes(x = month, y = abundance, colour = site, group = site) +
geom_point() +
ylim(0, 8) +
geom_line() +
theme_bw() +
facet_wrap(~year) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
#legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1))+
labs(x = "Month", y = expression("Richness" ~ "(average species count/site visit)"), title = "Seasonal Species Richness")
bivalve_seasonal_species_richness
### count of species by quadtrat
bi.wide <- bivalves %>%
group_by(year, month, day, site, elevation, quad, species) %>%
summarise(abundance = length(species)) %>%
spread("species", "abundance")
# replace n/a with 0's
bi.wide[is.na(bi.wide)] <- 0
# create long data with null observations
bi.long <- gather(bi.wide, species, abundance, bama:umac)
#create character for month
bi.wide$month <- factor(bi.wide$month,
levels = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
bi.long$month <- factor(bi.long$month,
levels = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
#pseudo-standardize effort: reduce 2016 values by a factor of 4; equal area
bi.long$abundance_modified <- if_else(bi.long$year == 2016,
bi.long$abundance / 4,
if_else(bi.long$year == 2017 & bi.long$month == "Feb",
bi.long$abundance / 4,
bi.long$abundance),
bi.long$abundance)
#wide data with effort correction
bi.wide <- bi.long %>%
group_by(year, month, day, site, elevation, quad, species) %>%
summarise(abundance = mean(abundance_modified)) %>%
spread("species", "abundance")
#new column; shannon H
bi.wide$shan <- diversity(
bi.wide[(which(colnames(bi.wide) == "bama")) :
(which(colnames(bi.wide) == "umac"))],
index = "shannon")
#new column; species abundance
bi.wide$abundance<- specnumber(
bi.wide[(which(colnames(bi.wide) == "bama")) :
(which(colnames(bi.wide) == "umac"))])
bivalve_species_accumulation <-
specaccum(bi.wide[
(which(colnames(bi.wide) == "bama")) :
(which(colnames(bi.wide) == "umac"))]) %>%
plot(ci.type="polygon", ci.col="lightyellow", xlab = "site visits", ylab = "species number")
#abundance
bivalve_seasonal_species_richness <-
bi.wide %>%
group_by(year, month, site) %>%
summarise_at(vars(shan:abundance), mean) %>%
ggplot() +
aes(x = month, y = abundance, colour = site, group = site) +
geom_point() +
ylim(0, 8) +
geom_line() +
theme_bw() +
facet_wrap(~year) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
#legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1))+
labs(x = "Month", y = expression("Richness" ~ "(average species count/site visit)"), title = "Seasonal Species Richness")
bivalve_seasonal_species_richness
#shannons H
bivalve_seasonal_shannons <-
bi.wide %>%
group_by(year, month, site) %>%
summarise_at(vars(shan:abundance), mean) %>%
ggplot() +
aes(x = month, y = shan, colour = site, group = site) +
geom_point() +
ylim(0, 3) +
geom_line() +
theme_bw() +
facet_wrap(~year) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
#legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1))+
labs(x = "Month", y = expression("Shannons H"), title = "Seasonal Shannons H")
bivalve_seasonal_shannons
#bivalve species abundance by tide height and year
bivalve_tidal_richness <-
bi.wide %>%
group_by(year, elevation) %>%
ggplot() +
aes(x = elevation, y = abundance, group= elevation) +
geom_boxplot() +
theme_bw() +
facet_wrap(~year) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1))+
labs(x = "tide height (m)", y = expression("Richness" ~ "(average species count/site visit)"), title = "Species Richness by Tide Height")
bivalve_tidal_richness
#bivalve abundance by tide height and year: effort corrected
bivalve_tidal_abundance <-
bi.long %>%
group_by(year, month, day, site, elevation, quad) %>%
summarise(abundance = sum(abundance_modified, na.rm = TRUE)) %>%
group_by(year, elevation) %>%
ggplot() +
aes(x = elevation, y = abundance, group= elevation) +
geom_boxplot() +
theme_bw() +
facet_wrap(~year) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1))+
labs(x = "tide height (m)", y = expression("Bivalve abundance" ~ "(mean count/quadrat)"), title = "Total Bivalve Abundance by Tide Height")
bivalve_tidal_abundance
#abundance
bivalve_seasonal_species_richness <-
bi.wide %>%
group_by(year, month, site) %>%
summarise_at(vars(shan:abundance), mean) %>%
ggplot() +
aes(x = month, y = abundance, colour = site, group = site) +
geom_point() +
ylim(0, 8) +
geom_line() +
theme_bw() +
facet_wrap(~year) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
#legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1))+
labs(x = "Month", y = expression("Richness" ~ "(average species count/site visit)"), title = "Seasonal Species Richness")
bivalve_seasonal_species_richness
View(bi.wide)
abundance_seasonal <- function(Species){
filter(bi.long.y.m.s.s, species == Species) %>%
filter(year != "2018") %>%
filter(abundance > 0) %>%
ggplot() +
aes(x = month, y = abundance, colour = site, group = site) +
geom_point(size = 2.5, position = position_dodge(width = 0.25)) +
geom_line( position = position_dodge(width = 0.25)) +
facet_wrap(~year)+
theme_bw() +
geom_errorbar(aes(ymin = abundance - se,
ymax = abundance + se),
width = 0,
size = 1,
position = position_dodge(width = 0.25)) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
#legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1)) +
labs(x = "Month", y = expression(Density ~ "(mean count/0.065m"^"2)"))
}
bama <-
abundance_seasonal("bama")
abundance_seasonal <- function(Species){
filter(bi.long.y.m.s.s, species == Species) %>%
filter(year != "2018") %>%
filter(abundance > 0) %>%
ggplot() +
aes(x = month, y = abundance, colour = site, group = site) +
geom_point(size = 2.5, position = position_dodge(width = 0.25)) +
geom_line( position = position_dodge(width = 0.25)) +
facet_wrap(~year)+
theme_bw() +
geom_errorbar(aes(ymin = abundance - se,
ymax = abundance + se),
width = 0,
size = 1,
position = position_dodge(width = 0.25)) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
#legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1)) +
labs(x = "Month", y = expression(Density ~ "(mean count/0.065m"^"2)"))
}
bama <-
abundance_seasonal("bama")
bama
bama <-
abundance_seasonal("bama",expression(italic(Limecola~balthica)))
abundance_seasonal <- function(Species, Title){
filter(bi.long.y.m.s.s, species == Species) %>%
filter(year != "2018") %>%
filter(abundance > 0) %>%
ggplot() +
aes(x = month, y = abundance, colour = site, group = site) +
geom_point(size = 2.5, position = position_dodge(width = 0.25)) +
geom_line( position = position_dodge(width = 0.25)) +
facet_wrap(~year)+
theme_bw() +
geom_errorbar(aes(ymin = abundance - se,
ymax = abundance + se),
width = 0,
size = 1,
position = position_dodge(width = 0.25)) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
#legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1)) +
labs(x = "Month", y = expression(Density ~ "(mean count/0.065m"^"2)"), title = Title)
}
bama <-
abundance_seasonal("bama",expression(italic(Limecola~balthica)))
bama
#length frequency graphics function by year and month
lfq_year_month <- function(Species1, Species2) {
plotlfq <-dl.temp <- filter(bivalves, species == Species1 | species == Species2)
dl.lfq  <- lfqCreate(dl.temp, Lname = "length", Dname = "date", Fname = NA, bin_size = 3,
length_unit = "cm", plus_group = FALSE, aggregate_dates = TRUE,
plot = FALSE)
plot(dl.lfq, Fname = "catch", ylab = "Length (mm)")
}
#execute above function
#function of species and length filter(outliers)
lfq_year_month("umac", "pmac")
#execute above function
#function of species and length filter(outliers)
lfq_year_month("cocl", "")
dl.lfq  <- lfqCreate(dl.temp, Lname = "length", Dname = "date", Fname = NA, bin_size = 5,
length_unit = "cm", plus_group = FALSE, aggregate_dates = TRUE,
plot = FALSE)
plot(dl.lfq, Fname = "catch", ylab = "Length (mm)")
#length frequency graphics function by year and month
lfq_year_month <- function(Species1, Species2) {
plotlfq <-dl.temp <- filter(bivalves, species == Species1 | species == Species2)
dl.lfq  <- lfqCreate(dl.temp, Lname = "length", Dname = "date", Fname = NA, bin_size = 5,
length_unit = "cm", plus_group = FALSE, aggregate_dates = TRUE,
plot = FALSE)
plot(dl.lfq, Fname = "catch", ylab = "Length (mm)")
}
#execute above function
#function of species and length filter(outliers)
lfq_year_month("cocl", "")
#length frequency graphics function by year and month
lfq_year_month <- function(Species1, Species2) {
plotlfq <-dl.temp <- filter(bivalves, species == Species1 | species == Species2)
dl.lfq  <- lfqCreate(dl.temp, Lname = "length", Dname = "date", Fname = NA, bin_size = 3,
length_unit = "cm", plus_group = FALSE, aggregate_dates = TRUE,
plot = FALSE)
plot(dl.lfq, Fname = "catch", ylab = "Length (mm)")
}
#execute above function
#function of species and length filter(outliers)
lfq_year_month("plne", "")
#execute above function
#function of species and length filter(outliers)
lfq_year_month("beno", "")
#execute above function
#function of species and length filter(outliers)
lfq_year_month("beno", "umac")
#execute above function
#function of species and length filter(outliers)
lfq_year_month("beno", "")
#execute above function
#function of species and length filter(outliers)
lfq_year_month("bucl", "")
#seasonal mean length function for any species with standard error
mean_length_seasonal <- function(Species, Year) {
filter(bi.length.y.m.s, species == Species, year == Year) %>%
ggplot() +
aes(x = month, y = length, colour = factor(site), group = site) +
geom_point(size = 2.5, position = position_dodge(width = 0.25)) +
geom_line(position = position_dodge(width = 0.25)) +
geom_errorbar(aes(ymin = length - se,
ymax = length + se),
width = 0,
size = 1,
position = position_dodge(width = 0.25)) +
theme_bw() +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
#legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1)) +
labs(x = "Month", y = expression("Mean Length(mm)"), colour = "site")
}
#execute above function
mean_length_seasonal("umac",2017)
#length frequency graphics function by year and month
lfq_year_month <- function(Species1, Species2) {
plotlfq <-dl.temp <- filter(bivalves, species == Species1 | species == Species2)
dl.lfq  <- lfqCreate(dl.temp, Lname = "length", Dname = "date", Fname = NA, bin_size = 3,
length_unit = "cm", plus_group = FALSE, aggregate_dates = TRUE,
plot = FALSE)
plot(dl.lfq, Fname = "catch", ylab = "Length (mm)")
}
#execute above function
#function of species and length filter(outliers)
bucl <-
lfq_year_month("bucl", "")
#length frequency graphics function by year and month
lfq_year_month <- function(Species1, Species2) {
plotlfq <-dl.temp <- filter(bivalves, species == Species1 | species == Species2)
dl.lfq  <- lfqCreate(dl.temp, Lname = "length", Dname = "date", Fname = NA, bin_size = 3,
length_unit = "cm", plus_group = FALSE, aggregate_dates = TRUE,
plot = FALSE)
plot(dl.lfq, Fname = "catch", ylab = "Length (mm)")
}
#execute above function
#function of species and length filter(outliers)
bucl <-
lfq_year_month("bucl", "")
#length frequency graphics function by year and month
lfq_year_month <- function(Species1, Species2) {
plotlfq <-dl.temp <- filter(bivalves, species == Species1 | species == Species2)
dl.lfq  <- lfqCreate(dl.temp, Lname = "length", Dname = "date", Fname = NA, bin_size = 3,
length_unit = "cm", plus_group = FALSE, aggregate_dates = TRUE,
plot = FALSE)
plot(dl.lfq, Fname = "catch", ylab = "Length (mm)")
}
#seasonal mean length function for any species with standard error
mean_length_seasonal <- function(Species, Year) {
filter(bi.length.y.m.s, species == Species, year == Year) %>%
ggplot() +
aes(x = month, y = length, colour = factor(site), group = site) +
geom_point(size = 2.5, position = position_dodge(width = 0.25)) +
geom_line(position = position_dodge(width = 0.25)) +
geom_errorbar(aes(ymin = length - se,
ymax = length + se),
width = 0,
size = 1,
position = position_dodge(width = 0.25)) +
theme_bw() +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
#legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1)) +
labs(x = "Month", y = expression("Mean Length(mm)"), colour = "site")
}
umac <-
mean_length_seasonal("umac",2017)
umac
lfq_year_month("bama", "")
lfq_year_month("cocl", "")
lfq_year_month("jlne", "")
lfq_year_month("keve", "")
lfq_year_month("myac", "")
lfq_year_month("plne", "")
#corrected effort used
bi.wide.nmds <- bi.wide %<>%
group_by(site, year, month)
bi.wide.nmds <- summarise_all(bi.wide.nmds, funs(mean))
nmds.july2014 <- metaMDS(bi.wide.nmds[(which(colnames(bi.wide) == "bama")) :
(which(colnames(bi.wide) == "umac"))],
k=2)
#corrected effort used
bi.wide.nmds <- bi.wide %<>%
group_by(site, year, month)
bi.wide.nmds <- summarise_all(bi.wide.nmds, funs(mean))
nmds.july2014 <- metaMDS(bi.wide.nmds[(which(colnames(bi.wide) == "bama")) :
(which(colnames(bi.wide) == "umac"))],
k=2)
ordiplot(nmds.july2014,
display="site",
type="n",
xlim = c(-2, 2))
points(nmds.july2014,
col="black",
pch = (as.integer(bi.wide.nmds$site)))
ordihull(nmds.july2014, bi.wide.nmds$site,
scaling = "symmetric",
lty=(as.integer(bi.wide.nmds$site)))
legend("topright", levels(bi.wide.nmds$site),
pch=1:(length(levels(bi.wide.nmds$site))),
lty=1:(length(levels(bi.wide.nmds$site))))
