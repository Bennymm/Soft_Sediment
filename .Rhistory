group_by(year, elevation) %>%
ggplot() +
aes(x = elevation, y = abundance, group= elevation) +
geom_boxplot() +
theme_bw() +
facet_wrap(~year) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1))+
labs(x = "tide height (m)", y = expression("Benthic Invertebrate Abundance" ~ "(mean count/quadrat)"))
#seasonal mean count function for any species with standard error
invert_abundance_seasonal <- function(Species, Title) {
filter(in.count.y.m.s, species == Species, year == 2017, count > 0) %>%
ggplot() +
aes(x = month, y = count, colour = factor(site), group = site) +
geom_point(size = 2.5, position = position_dodge(width = 0.25)) +
geom_line(position = position_dodge(width = 0.25)) +
geom_errorbar(aes(ymin = count - se,
ymax = count + se),
width = 0,
size = 1,
position = position_dodge(width = 0.25)) +
theme_bw() +
facet_wrap(~elevation) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
#legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1)) +
labs(x = "Month", y = expression("Mean count/quadrat"), colour = "site", title = Title)
}
#execute above function
invert_abundance_seasonal("amph", "Amphipoda")
invert_abundance_seasonal("bacu", expression(italic(Batillaria~spp.)))
invert_abundance_seasonal("bagl", expression(italic(Balanus~glandula)))
invert_abundance_seasonal("limp", "Limpets")
invert_species_accumulation <-
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number", title = "Species accumulation Curve")
invert_species_accumulation <-
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number", title = "Species accumulation Curve")
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number", title = "Species accumulation Curve")
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
invert_species_accumulation
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
#bivalve diversity(shannons and spp.richness) by site and month; all sites
#richness
invert_seasonal_species_richness <-
in.wide %>%
group_by(year, month, site) %>%
summarise_at(vars(shan:abundance), mean) %>%
ggplot() +
aes(x = month, y = abundance, colour = site, group = site) +
geom_point() +
geom_line() +
theme_bw() +
facet_wrap(~year) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
#legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1))+
labs(x = "Month", y = expression("Richness" ~ "(species count/site visit)"))
#bivalve diversity(shannons and spp.richness) by site and month; all sites
#richness
invert_seasonal_species_richness
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
#execute above function
invert_abundance_seasonal("amph", "Amphipoda")
#execute above function
invert_abundance_seasonal("plat", "Amphipoda")
#execute above function
invert_abundance_seasonal("flat", "Amphipoda")
invert_species_accumulation <- {
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
}
invert_species_accumulation <- {
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
}
#bivalve diversity(shannons and spp.richness) by site and month; all sites
#richness
invert_seasonal_species_richness <-
in.wide %>%
group_by(year, month, site) %>%
summarise_at(vars(shan:abundance), mean) %>%
ggplot() +
aes(x = month, y = abundance, colour = site, group = site) +
geom_point() +
geom_line() +
theme_bw() +
facet_wrap(~year) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
#legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1))+
labs(x = "Month", y = expression("Richness" ~ "(species count/site visit)"))
#bivalve diversity(shannons and spp.richness) by site and month; all sites
#richness
invert_seasonal_species_richness
invert_species_accumulation <- {
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
}
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))])
invert_species_accumulation <-
plot(specaccum, ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
specaccum <-
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))])
invert_species_accumulation <-
plot(specaccum, ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
invert_species_accumulation
#bivalve diversity(shannons and spp.richness) by site and month; all sites
#richness
invert_seasonal_species_richness <-
in.wide %>%
group_by(year, month, site) %>%
summarise_at(vars(shan:abundance), mean) %>%
ggplot() +
aes(x = month, y = abundance, colour = site, group = site) +
geom_point() +
geom_line() +
theme_bw() +
facet_wrap(~year) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
#legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1))+
labs(x = "Month", y = expression("Richness" ~ "(species count/site visit)"))
c
#bivalve diversity(shannons and spp.richness) by site and month; all sites
#richness
invert_seasonal_species_richness
specaccum <-
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))])
invert_species_accumulation <-
plot(specaccum, ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
invert_species_accumulation
View(in.count.y.m.s)
onversions. This script must be run before other subsequent scripts.
#library("tidyverse", lib.loc="~/R/win-library/3.4")
#library("dplyr", lib.loc="~/R/win-library/3.4")
#library("vegan", lib.loc="~/R/win-library/3.4")
#library("BiodiversityR", lib.loc="~/R/win-library/3.4")
#library("knitr", lib.loc="~/R/win-library/3.4")
#library("yaml", lib.loc="~/R/win-library/3.4")
#library("markdown", lib.loc="~/R/win-library/3.4")
#library("MASS", lib.loc="~/R/win-library/3.4")
#library("magrittr", lib.loc="~/R/win-library/3.4")
#library("lubridate", lib.loc="~/R/win-library/3.4")
#library("TropFishR", lib.loc="~/R/win-library/3.4")
inverts      <- read.csv ("C:/Users/FABS/Desktop/Rwd_Ben/Soft_sed/working_files/inverts.csv")
#create y.m.d date variable for TropFishR (length frequency data)
inverts$date <- ymd(paste(inverts$year, inverts$month, inverts$day))
#create character for month
inverts$month <- factor(inverts$month,
levels = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
# coerce some variables to type 'character'
inverts$elevation <-
as.character(inverts$elevation)
inverts$species <-
as.character(inverts$species)
### count of species by quadtrat
in.wide <- inverts %>%
group_by(year, month, day, site, elevation, quad, species) %>%
summarise(count = mean(count)) %>%
spread("species", "count")
# replace n/a with 0's
in.wide[is.na(in.wide)] <- 0
# create long data with null observations
in.long <- gather(in.wide, species, count, amph:unwo)
#for mean seasonal abundance of individual species
in.count.y.m.s <-
group_by(in.long, year, month, site, elevation, species)  %>%
summarise(se = sd(count, na.rm = TRUE)/sqrt(length(count)),
count = mean(count, na.rm = TRUE))
#for seasonal abundance and diversity of individual species
in.long.y.m.s.s <-in.long %>%
group_by(year, month, site, species) %>%
summarise(se = sd(count, na.rm = TRUE)/sqrt((length(species))),
abundance = mean(count, na.rm = TRUE))
#new column; shannon H
in.wide$shan <- diversity(
in.wide[(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))],
index = "shannon")
#new column; species abundance
in.wide$abundance<- specnumber(
in.wide[(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))])
invert_species_accumulation <-
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
invert_species_accumulation <- {
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
}
#bivalve diversity(shannons and spp.richness) by site and month; all sites
#richness
invert_seasonal_species_richness <-
in.wide %>%
group_by(year, month, site) %>%
summarise_at(vars(shan:abundance), mean) %>%
ggplot() +
aes(x = month, y = abundance, colour = site, group = site) +
geom_point() +
geom_line() +
theme_bw() +
facet_wrap(~year) +
theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),
#legend.position  = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text             = element_text(size = 13, vjust = 0.1))+
labs(x = "Month", y = expression("Richness" ~ "(species count/site visit)"))
View(invert_seasonal_species_richness)
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
invert_species_accumulation <-
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))])
invert_species_accumulation <-
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
invert_species_accumulation <-
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
invert_species_accumulation <-
plot(, ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
#specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
### count of species by quadtrat
in.wide <- inverts %>%
group_by(year, month, day, site, elevation, quad, species) %>%
summarise(count = mean(count)) %>%
spread("species", "count")
#This block of code contains initial data imports, manipulations and reformatting.
#These processes may include but are not limited to: merging, transposing,
#summarising, new variable derivation, renaming and variable 'type'
#conversions. This script must be run before other subsequent scripts.
#library("tidyverse", lib.loc="~/R/win-library/3.4")
#library("dplyr", lib.loc="~/R/win-library/3.4")
#library("vegan", lib.loc="~/R/win-library/3.4")
#library("BiodiversityR", lib.loc="~/R/win-library/3.4")
#library("knitr", lib.loc="~/R/win-library/3.4")
#library("yaml", lib.loc="~/R/win-library/3.4")
#library("markdown", lib.loc="~/R/win-library/3.4")
#library("MASS", lib.loc="~/R/win-library/3.4")
#library("magrittr", lib.loc="~/R/win-library/3.4")
#library("lubridate", lib.loc="~/R/win-library/3.4")
#library("TropFishR", lib.loc="~/R/win-library/3.4")
inverts      <- read.csv ("C:/Users/FABS/Desktop/Rwd_Ben/Soft_sed/working_files/inverts.csv")
#create y.m.d date variable for TropFishR (length frequency data)
inverts$date <- ymd(paste(inverts$year, inverts$month, inverts$day))
#create character for month
inverts$month <- factor(inverts$month,
levels = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
# coerce some variables to type 'character'
inverts$elevation <-
as.character(inverts$elevation)
inverts$species <-
as.character(inverts$species)
### count of species by quadtrat
in.wide <- inverts %>%
group_by(year, month, day, site, elevation, quad, species) %>%
summarise(count = mean(count)) %>%
spread("species", "count")
# replace n/a with 0's
in.wide[is.na(in.wide)] <- 0
# create long data with null observations
in.long <- gather(in.wide, species, count, amph:unwo)
#for mean seasonal abundance of individual species
in.count.y.m.s <-
group_by(in.long, year, month, site, elevation, species)  %>%
summarise(se = sd(count, na.rm = TRUE)/sqrt(length(count)),
count = mean(count, na.rm = TRUE))
#for seasonal abundance and diversity of individual species
in.long.y.m.s.s <-in.long %>%
group_by(year, month, site, species) %>%
summarise(se = sd(count, na.rm = TRUE)/sqrt((length(species))),
abundance = mean(count, na.rm = TRUE))
invert_species_accumulation <-
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
invert_species_accumulation
plot(1:10)
p <- recordPlot()
plot.new() ## clean up device
p # redraw
## grab the scene as a grid object
library(gridGraphics)
library(grid)
grid.echo()
install.packages("gridGraphics")
## grab the scene as a grid object
library(gridGraphics)
library(grid)
grid.echo()
a <- grid.grab()
## draw it, changes optional
grid.newpage()
a <- editGrob(a, vp=viewport(width=unit(2,"in")), gp=gpar(fontsize=10))
grid.draw(a)
## grab the scene as a grid object
library(gridGraphics)
library(grid)
grid.echo()
plot(1:10)
p <- recordPlot()
plot.new() ## clean up device
p # redraw
grid.echo()
a <- grid.grab()
a
a
plot(1:10)
p <- recordPlot()
plot.new() ## clean up device
p # redraw
grid.echo()
a <- grid.grab()
a
## draw it, changes optional
grid.newpage()
a <- editGrob(a, vp=viewport(width=unit(2,"in")), gp=gpar(fontsize=10))
grid.draw(a)
a <- grid.grab()
grid.draw(a
grid.echo()
library(grid)
grid.echo()
a <- grid.grab()
grid.draw(a
plot(1:10)
p <- recordPlot()
plot.new() ## clean up device
p # redraw
plot(1:10)
p <- recordPlot()
plot.new() ## clean up device
p # redraw
## grab the scene as a grid object
library(gridGraphics)
library(grid)
grid.echo()
a <- grid.grab()
grid.draw(a
grid.draw(a)
plot(1:10)
p <- recordPlot()
plot.new() ## clean up device
p # redraw
## grab the scene as a grid object
library(gridGraphics)
library(grid)
grid.echo()
a <- grid.grab()
grid.draw(a)
plot(1:10)
p <- recordPlot()
plot.new() ## clean up device
p # redraw
## grab the scene as a grid object
library(gridGraphics)
library(grid)
grid.echo()
a <- grid.grab()
grid.draw(a)
plot(1:10)
p <- recordPlot()
plot.new() ## clean up device
p # redraw
## grab the scene as a grid object
library(gridGraphics)
grid.echo()
a <- grid.grab()
grid.draw(a)
plot(1:10)
p <- recordPlot()
plot.new() ## clean up device
p # redraw
## grab the scene as a grid object
library(gridGraphics)
plot(1:10)
p <- recordPlot()
p <- recordPlot()
plot(1:10)
p <- recordPlot()
plot.new() ## clean up device
p # redraw
grid.echo()
a <- grid.grab()
grid.draw(a)
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
#This block of code contains initial data imports, manipulations and reformatting.
#These processes may include but are not limited to: merging, transposing,
#summarising, new variable derivation, renaming and variable 'type'
#conversions. This script must be run before other subsequent scripts.
#library("tidyverse", lib.loc="~/R/win-library/3.4")
#library("dplyr", lib.loc="~/R/win-library/3.4")
#library("vegan", lib.loc="~/R/win-library/3.4")
#library("BiodiversityR", lib.loc="~/R/win-library/3.4")
#library("knitr", lib.loc="~/R/win-library/3.4")
#library("yaml", lib.loc="~/R/win-library/3.4")
#library("markdown", lib.loc="~/R/win-library/3.4")
#library("MASS", lib.loc="~/R/win-library/3.4")
#library("magrittr", lib.loc="~/R/win-library/3.4")
#library("lubridate", lib.loc="~/R/win-library/3.4")
#library("TropFishR", lib.loc="~/R/win-library/3.4")
inverts      <- read.csv ("C:/Users/FABS/Desktop/Rwd_Ben/Soft_sed/working_files/inverts.csv")
#create y.m.d date variable for TropFishR (length frequency data)
inverts$date <- ymd(paste(inverts$year, inverts$month, inverts$day))
#create character for month
inverts$month <- factor(inverts$month,
levels = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"))
# coerce some variables to type 'character'
inverts$elevation <-
as.character(inverts$elevation)
inverts$species <-
as.character(inverts$species)
### count of species by quadtrat
in.wide <- inverts %>%
group_by(year, month, day, site, elevation, quad, species) %>%
summarise(count = mean(count)) %>%
spread("species", "count")
# replace n/a with 0's
in.wide[is.na(in.wide)] <- 0
# create long data with null observations
in.long <- gather(in.wide, species, count, amph:unwo)
#for mean seasonal abundance of individual species
in.count.y.m.s <-
group_by(in.long, year, month, site, elevation, species)  %>%
summarise(se = sd(count, na.rm = TRUE)/sqrt(length(count)),
count = mean(count, na.rm = TRUE))
#for seasonal abundance and diversity of individual species
in.long.y.m.s.s <-in.long %>%
group_by(year, month, site, species) %>%
summarise(se = sd(count, na.rm = TRUE)/sqrt((length(species))),
abundance = mean(count, na.rm = TRUE))
#new column; shannon H
in.wide$shan <- diversity(
in.wide[(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))],
index = "shannon")
#new column; species abundance
in.wide$abundance<- specnumber(
in.wide[(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))])
specaccum(in.wide[
(which(colnames(in.wide) == "amph")) :
(which(colnames(in.wide) == "unwo"))]) %>%
plot(ci.type="polygon", ci.col="lightyellow", xlab = "quadrat samplings", ylab = "species number")
invert_species_accumulation <- recordPlot()
invert_species_accumulation
