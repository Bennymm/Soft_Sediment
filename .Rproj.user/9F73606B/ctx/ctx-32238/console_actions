{
    "data" : [
        "\nR version 3.4.2 (2017-09-28) -- \"Short Summer\"\nCopyright (C) 2017 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "#This block of code contains initial data imports, manipulations and reformatting. ",
        "> ",
        "#These processes may include but are not limited to: merging, transposing, ",
        "> ",
        "#summarising, new variable derivation, renaming and variable 'type' ",
        "> ",
        "#conversions. This script must be run before other subsequent scripts.",
        "> ",
        "",
        "> ",
        "#load packages",
        "> ",
        "library(\"tidyverse\", lib.loc=\"~/R/win-library/3.4\")",
        "Loading tidyverse: ggplot2\nLoading tidyverse: tibble\nLoading tidyverse: tidyr\nLoading tidyverse: readr\nLoading tidyverse: purrr\nLoading tidyverse: dplyr\n",
        "Conflicts with tidy packages ---------------------------------------------\n",
        "filter(): dplyr, stats\nlag():    dplyr, stats\n",
        "> ",
        "library(\"dplyr\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"vegan\", lib.loc=\"~/R/win-library/3.4\")",
        "Loading required package: permute\n",
        "Loading required package: lattice\n",
        "This is vegan 2.4-4\n",
        "> ",
        "library(\"BiodiversityR\", lib.loc=\"~/R/win-library/3.4\")",
        "Loading required package: tcltk\n",
        "BiodiversityR 2.8-4: Use command BiodiversityRGUI() to launch the Graphical User Interface and to learn about backward compatibility\n\n",
        "> ",
        "library(\"knitr\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"yaml\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"markdown\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"MASS\", lib.loc=\"~/R/win-library/3.4\")",
        "\nAttaching package: ‘MASS’\n\n",
        "The following object is masked from ‘package:dplyr’:\n\n    select\n\n",
        "Error in FUN(X[[i]], ...) : \n  cannot open file '~/R/win-library/3.4/MASS/data/Rdata.rdb': No such file or directory\n",
        "> ",
        "library(\"magrittr\", lib.loc=\"~/R/win-library/3.4\")",
        "\nAttaching package: ‘magrittr’\n\n",
        "The following object is masked from ‘package:purrr’:\n\n    set_names\n\n",
        "The following object is masked from ‘package:tidyr’:\n\n    extract\n\n",
        "> ",
        "library(\"lubridate\", lib.loc=\"~/R/win-library/3.4\")",
        "\nAttaching package: ‘lubridate’\n\n",
        "The following object is masked from ‘package:base’:\n\n    date\n\n",
        "Warning message:\n",
        "package ‘lubridate’ was built under R version 3.4.3 \n",
        "> ",
        "library(\"TropFishR\", lib.loc=\"~/R/win-library/3.4\")",
        "\nAttaching package: ‘TropFishR’\n\n",
        "The following object is masked from ‘package:dplyr’:\n\n    select\n\n",
        "Warning message:\n",
        "package ‘TropFishR’ was built under R version 3.4.3 \n",
        "> ",
        "",
        "> ",
        "# set working directory",
        "> ",
        "setwd(\"C:/Users/FABS/Desktop/Rwd_Ben/Soft_sed/working_files\")",
        "> ",
        "",
        "> ",
        "# read in data",
        "> ",
        "bivalves      <- read.csv (\"bivalves.csv\")",
        "> ",
        "# coerce some variables to type 'character'",
        "> ",
        "bivalves$elevation <-",
        "+ ",
        "  as.character(bivalves$elevation)",
        "> ",
        "bivalves$species <-",
        "+ ",
        "  as.character(bivalves$species)",
        "> ",
        "",
        "> ",
        "#create y.m.d date variable for TropFishR (length frequency data)",
        "> ",
        "bivalves$date <- ymd(paste(bivalves$year, bivalves$month, bivalves$day))",
        "> ",
        "",
        "> ",
        "### count of species by quadtrat",
        "> ",
        "bi.wide <- bivalves %>%",
        "+ ",
        "  group_by(year, month, day, site, elevation, quad, species) %>%",
        "+ ",
        "  summarise(abundance = length(species)) %>%",
        "+ ",
        "  spread(\"species\", \"abundance\")",
        "> ",
        "",
        "> ",
        "# replace n/a with 0's",
        "> ",
        "bi.wide[is.na(bi.wide)] <- 0",
        "> ",
        "# create long data with null observations",
        "> ",
        "bi.long <- gather(bi.wide, species, abundance, bama:umac)",
        "> ",
        "",
        "> ",
        "#create character for month",
        "> ",
        "bi.wide$month <- factor(bi.wide$month, ",
        "+ ",
        "                        levels = c(1,2,3,4,5,6,7,8,9,10,11,12), ",
        "+ ",
        "                        labels = c(\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"))",
        "> ",
        "bi.long$month <- factor(bi.long$month, ",
        "+ ",
        "                        levels = c(1,2,3,4,5,6,7,8,9,10,11,12), ",
        "+ ",
        "                        labels = c(\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"))",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#pseudo-standardize effort: reduce 2016 values by a factor of 4; equal area ",
        "> ",
        "bi.long$abundance_modified <- if_else(bi.long$year == 2016,",
        "+ ",
        "                                      bi.long$abundance / 4,",
        "+ ",
        "                                      if_else(bi.long$year == 2017 & bi.long$month == \"Feb\", ",
        "+ ",
        "                                              bi.long$abundance / 4, ",
        "+ ",
        "                                              bi.long$abundance),",
        "+ ",
        "                                      bi.long$abundance)",
        "> ",
        "",
        "> ",
        "#wide data wit effort correction",
        "> ",
        "bi.wide.cor <- bi.long %>%",
        "+ ",
        "  group_by(year, month, day, site, elevation, species) %>%",
        "+ ",
        "  summarise(abundance = mean(abundance_modified)) %>%",
        "+ ",
        "  spread(\"species\", \"abundance\")",
        "> ",
        "",
        "> ",
        "#for mean seasonal length of individual species",
        "> ",
        "bi.length.y.m.s <-",
        "+ ",
        "  group_by(bivalves, year, month, site, species)  %>%",
        "+ ",
        "  summarise(se = sd(length, na.rm = TRUE)/sqrt((length(length))), length = mean(length, na.rm = TRUE))",
        "> ",
        "bi.length.y.m.s$month <- factor(bi.length.y.m.s$month, ",
        "+ ",
        "                        levels = c(1,2,3,4,5,6,7,8,9,10,11,12), ",
        "+ ",
        "                        labels = c(\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"))",
        "> ",
        "",
        "> ",
        "#for seasonal abundance of individual species",
        "> ",
        "bi.long.y.m.s.s <-bi.long %>%",
        "+ ",
        "  group_by(year, month, site, species) %>%",
        "+ ",
        "  summarise(se = sd(abundance_modified, na.rm = TRUE)/sqrt((length(species))), abundance = mean(abundance_modified, na.rm = TRUE))",
        "> ",
        "#new column; shannon H",
        "> ",
        "bi.wide$shan <- diversity(",
        "+ ",
        "  bi.wide[(which(colnames(bi.wide) == \"bama\")) : ",
        "+ ",
        "          (which(colnames(bi.wide) == \"umac\"))],",
        "+ ",
        "  index = \"shannon\")",
        "> ",
        "#new column; species abundance",
        "> ",
        "bi.wide$abundance<- specnumber(",
        "+ ",
        "  bi.wide[(which(colnames(bi.wide) == \"bama\")) :",
        "+ ",
        "          (which(colnames(bi.wide) == \"umac\"))])",
        "> ",
        "specaccum(bi.wide[",
        "+ ",
        "  (which(colnames(bi.wide) == \"bama\")) : ",
        "+ ",
        "  (which(colnames(bi.wide) == \"umac\"))]) %>%",
        "+ ",
        "  plot(ci.type=\"polygon\", ci.col=\"lightyellow\", xlab = \"site visits\", ylab = \"species number\")",
        "> ",
        "#bivalve diversity(shannons and spp.richness) by site and month; all sites",
        "> ",
        "#abundance",
        "> ",
        "bi.wide %>% ",
        "+ ",
        "  group_by(year, month, site) %>%",
        "+ ",
        "  summarise_at(vars(shan:abundance), mean) %>%",
        "+ ",
        "ggplot() +",
        "+ ",
        "  aes(x = month, y = abundance, colour = site, group = site) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  ylim(0, 8) +",
        "+ ",
        "  geom_line() +",
        "+ ",
        "  theme_bw() +",
        "+ ",
        "  facet_wrap(~year) +",
        "+ ",
        "  theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),",
        "+ ",
        "        #legend.position  = \"none\",",
        "+ ",
        "        panel.grid.major = element_blank(),",
        "+ ",
        "        panel.grid.minor = element_blank(),",
        "+ ",
        "        text             = element_text(size = 13, vjust = 0.1))+",
        "+ ",
        "  labs(x = \"Month\", y = expression(\"Richness\" ~ \"(average species count/site visit)\"))",
        "> ",
        "#shannons H",
        "> ",
        "bi.wide %>% ",
        "+ ",
        "  group_by(year, month, site) %>%",
        "+ ",
        "  summarise_at(vars(shan:abundance), mean) %>%",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  aes(x = month, y = shan, colour = site, group = site) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  ylim(0, 3) +",
        "+ ",
        "  geom_line() +",
        "+ ",
        "  theme_bw() +",
        "+ ",
        "  facet_wrap(~year) +",
        "+ ",
        "  theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),",
        "+ ",
        "        #legend.position  = \"none\",",
        "+ ",
        "        panel.grid.major = element_blank(),",
        "+ ",
        "        panel.grid.minor = element_blank(),",
        "+ ",
        "        text             = element_text(size = 13, vjust = 0.1))+",
        "+ ",
        "  labs(x = \"Month\", y = expression(\"Shannons H\"))",
        "> ",
        "#bivalve species abundance by tide height and year",
        "> ",
        "bi.wide %>%",
        "+ ",
        "  group_by(year, elevation) %>%",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  aes(x = elevation, y = abundance, group= elevation) +",
        "+ ",
        "  geom_boxplot() +",
        "+ ",
        "  theme_bw() +",
        "+ ",
        "  facet_wrap(~year) +",
        "+ ",
        "  theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),",
        "+ ",
        "        legend.position  = \"none\",",
        "+ ",
        "        panel.grid.major = element_blank(),",
        "+ ",
        "        panel.grid.minor = element_blank(),",
        "+ ",
        "                text             = element_text(size = 13, vjust = 0.1))+",
        "+ ",
        "  labs(x = \"tide height (m)\", y = expression(\"Richness\" ~ \"(average species count/site visit)\"))",
        "> ",
        "#bivalve abundance by tide height and year: effort corrected",
        "> ",
        "bi.long %>% ",
        "+ ",
        "  group_by(year, month, day, site, elevation, quad) %>%",
        "+ ",
        "  summarise(abundance = sum(abundance_modified, na.rm = TRUE)) %>%",
        "+ ",
        "  group_by(year, elevation) %>%",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  aes(x = elevation, y = abundance, group= elevation) +",
        "+ ",
        "  geom_boxplot() +",
        "+ ",
        "  theme_bw() +",
        "+ ",
        "  facet_wrap(~year) +",
        "+ ",
        "  theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),",
        "+ ",
        "        legend.position  = \"none\",",
        "+ ",
        "        panel.grid.major = element_blank(),",
        "+ ",
        "        panel.grid.minor = element_blank(),",
        "+ ",
        "        text             = element_text(size = 13, vjust = 0.1))+",
        "+ ",
        "  labs(x = \"tide height (m)\", y = expression(\"Bivalve abundance\" ~ \"(mean count/quadrat)\"))",
        "> ",
        "#bivalve diversity(shannons and spp.richness) by site and month; all sites",
        "> ",
        "#abundance",
        "> ",
        "bi.wide %>% ",
        "+ ",
        "  group_by(year, month, site) %>%",
        "+ ",
        "  summarise_at(vars(shan:abundance), mean) %>%",
        "+ ",
        "ggplot() +",
        "+ ",
        "  aes(x = month, y = abundance, colour = site, group = site) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  ylim(0, 8) +",
        "+ ",
        "  geom_line() +",
        "+ ",
        "  theme_bw() +",
        "+ ",
        "  facet_wrap(~year) +",
        "+ ",
        "  theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),",
        "+ ",
        "        #legend.position  = \"none\",",
        "+ ",
        "        panel.grid.major = element_blank(),",
        "+ ",
        "        panel.grid.minor = element_blank(),",
        "+ ",
        "        text             = element_text(size = 13, vjust = 0.1))+",
        "+ ",
        "  labs(x = \"Month\", y = expression(\"Richness\" ~ \"(average species count/site visit)\"))",
        "> ",
        "#load packages",
        "> ",
        "library(\"tidyverse\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"dplyr\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"vegan\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"BiodiversityR\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"knitr\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"yaml\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"markdown\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"MASS\", lib.loc=\"~/R/win-library/3.4\")",
        "\nAttaching package: ‘MASS’\n\n",
        "The following object is masked from ‘package:TropFishR’:\n\n    select\n\n",
        "The following object is masked from ‘package:dplyr’:\n\n    select\n\n",
        "Error in FUN(X[[i]], ...) : \n  cannot open file '~/R/win-library/3.4/MASS/data/Rdata.rdb': No such file or directory\n",
        "In addition: ",
        "Warning message:\n",
        "In FUN(X[[i]], ...) :",
        " restarting interrupted promise evaluation\n",
        "> ",
        "library(\"magrittr\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"lubridate\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"TropFishR\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"tidyverse\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"tidyverse\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"dplyr\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"vegan\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"BiodiversityR\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"knitr\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"yaml\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"markdown\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "library(\"MASS\", lib.loc=\"~/R/win-library/3.4\")",
        "Error in FUN(X[[i]], ...) : \n  cannot open file '~/R/win-library/3.4/MASS/data/Rdata.rdb': No such file or directory\n",
        "> ",
        "library(\"MASS\", lib.loc=\"~/R/win-library/3.4\")",
        "\nAttaching package: ‘MASS’\n\n",
        "The following object is masked from ‘package:TropFishR’:\n\n    select\n\n",
        "The following object is masked from ‘package:dplyr’:\n\n    select\n\n",
        "Error in FUN(X[[i]], ...) : \n  cannot open file '~/R/win-library/3.4/MASS/data/Rdata.rdb': No such file or directory\n",
        "In addition: ",
        "Warning message:\n",
        "In FUN(X[[i]], ...) :",
        " restarting interrupted promise evaluation\n",
        "> ",
        "library(\"MASS\", lib.loc=\"~/R/win-library/3.4\")",
        "\nAttaching package: ‘MASS’\n\n",
        "The following object is masked from ‘package:TropFishR’:\n\n    select\n\n",
        "The following object is masked from ‘package:dplyr’:\n\n    select\n\n",
        "Error in FUN(X[[i]], ...) : \n  cannot open file '~/R/win-library/3.4/MASS/data/Rdata.rdb': No such file or directory\n",
        "In addition: ",
        "Warning message:\n",
        "In FUN(X[[i]], ...) :",
        " restarting interrupted promise evaluation\n",
        "> ",
        "source(\"C:/Users/FABS/Desktop/Rwd_Ben/Soft_sed/working_files/Rscript/Soft_sediment/bivalve_diversity.R\")",
        "> ",
        "#bivalve diversity(shannons and spp.richness) by site and month; all sites",
        "> ",
        "#This is a comparison of seasonal diversity, but also acts as a comparison between years",
        "> ",
        "#abundance",
        "> ",
        "bi.wide %>% ",
        "+ ",
        "  group_by(year, month, site) %>%",
        "+ ",
        "  summarise_at(vars(shan:abundance), mean) %>%",
        "+ ",
        "ggplot() +",
        "+ ",
        "  aes(x = month, y = abundance, colour = site, group = site) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  ylim(0, 8) +",
        "+ ",
        "  geom_line() +",
        "+ ",
        "  theme_bw() +",
        "+ ",
        "  facet_wrap(~year) +",
        "+ ",
        "  theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),",
        "+ ",
        "        #legend.position  = \"none\",",
        "+ ",
        "        panel.grid.major = element_blank(),",
        "+ ",
        "        panel.grid.minor = element_blank(),",
        "+ ",
        "        text             = element_text(size = 13, vjust = 0.1))+",
        "+ ",
        "  labs(x = \"Month\", y = expression(\"Richness\" ~ \"(average species count/site visit)\"), title = Seasonal Abundance)",
        "Error: unexpected symbol in:\n\"        text             = element_text(size = 13, vjust = 0.1))+\n  labs(x = \"Month\", y = expression(\"Richness\" ~ \"(average species count/site visit)\"), title = Seasonal Abundance\"\n",
        "> ",
        "#bivalve diversity(shannons and spp.richness) by site and month; all sites",
        "> ",
        "#This is a comparison of seasonal diversity, but also acts as a comparison between years",
        "> ",
        "#abundance",
        "> ",
        "bi.wide %>% ",
        "+ ",
        "  group_by(year, month, site) %>%",
        "+ ",
        "  summarise_at(vars(shan:abundance), mean) %>%",
        "+ ",
        "ggplot() +",
        "+ ",
        "  aes(x = month, y = abundance, colour = site, group = site) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  ylim(0, 8) +",
        "+ ",
        "  geom_line() +",
        "+ ",
        "  theme_bw() +",
        "+ ",
        "  facet_wrap(~year) +",
        "+ ",
        "  theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),",
        "+ ",
        "        #legend.position  = \"none\",",
        "+ ",
        "        panel.grid.major = element_blank(),",
        "+ ",
        "        panel.grid.minor = element_blank(),",
        "+ ",
        "        text             = element_text(size = 13, vjust = 0.1))+",
        "+ ",
        "  labs(x = \"Month\", y = expression(\"Richness\" ~ \"(average species count/site visit)\"), title = \"Seasonal Abundance\")",
        "> ",
        "#bivalve species abundance by tide height and year",
        "> ",
        "bi.wide %>%",
        "+ ",
        "  group_by(year, elevation) %>%",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  aes(x = elevation, y = abundance, group= elevation) +",
        "+ ",
        "  geom_boxplot() +",
        "+ ",
        "  theme_bw() +",
        "+ ",
        "  facet_wrap(~year) +",
        "+ ",
        "  theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),",
        "+ ",
        "        legend.position  = \"none\",",
        "+ ",
        "        panel.grid.major = element_blank(),",
        "+ ",
        "        panel.grid.minor = element_blank(),",
        "+ ",
        "                text             = element_text(size = 13, vjust = 0.1))+",
        "+ ",
        "  labs(x = \"tide height (m)\", y = expression(\"Richness\" ~ \"(average species count/site visit)\"))",
        "> ",
        "#bivalve abundance by tide height and year: effort corrected",
        "> ",
        "bi.long %>% ",
        "+ ",
        "  group_by(year, month, day, site, elevation, quad) %>%",
        "+ ",
        "  summarise(abundance = sum(abundance_modified, na.rm = TRUE)) %>%",
        "+ ",
        "  group_by(year, elevation) %>%",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  aes(x = elevation, y = abundance, group= elevation) +",
        "+ ",
        "  geom_boxplot() +",
        "+ ",
        "  theme_bw() +",
        "+ ",
        "  facet_wrap(~year) +",
        "+ ",
        "  theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),",
        "+ ",
        "        legend.position  = \"none\",",
        "+ ",
        "        panel.grid.major = element_blank(),",
        "+ ",
        "        panel.grid.minor = element_blank(),",
        "+ ",
        "        text             = element_text(size = 13, vjust = 0.1))+",
        "+ ",
        "  labs(x = \"tide height (m)\", y = expression(\"Bivalve abundance\" ~ \"(mean count/quadrat)\"))",
        "> ",
        "#bivalve abundance by tide height and year: effort corrected",
        "> ",
        "bi.long %>% ",
        "+ ",
        "  group_by(year, month, day, site, elevation, quad) %>%",
        "+ ",
        "  summarise(abundance = sum(abundance_modified, na.rm = TRUE)) %>%",
        "+ ",
        "  group_by(year, elevation) %>%",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  aes(x = elevation, y = abundance, group= elevation) +",
        "+ ",
        "  geom_boxplot() +",
        "+ ",
        "  theme_bw() +",
        "+ ",
        "  facet_wrap(~year) +",
        "+ ",
        "  theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),",
        "+ ",
        "        legend.position  = \"none\",",
        "+ ",
        "        panel.grid.major = element_blank(),",
        "+ ",
        "        panel.grid.minor = element_blank(),",
        "+ ",
        "        text             = element_text(size = 13, vjust = 0.1))+",
        "+ ",
        "  labs(x = \"tide height (m)\", y = expression(\"Bivalve abundance\" ~ \"(mean count/quadrat)\"), title = \"Total Bivalve Abundance by Tide Height\")",
        "> ",
        "abundance_seasonal <- function(Species){",
        "+ ",
        "  filter(bi.long.y.m.s.s, species == Species) %>%",
        "+ ",
        "    filter(year != \"2018\") %>%",
        "+ ",
        "    filter(abundance > 0) %>%",
        "+ ",
        "    ggplot() +",
        "+ ",
        "    aes(x = month, y = abundance, colour = site, group = site) +",
        "+ ",
        "    geom_point(size = 2.5, position = position_dodge(width = 0.25)) +",
        "+ ",
        "    geom_line( position = position_dodge(width = 0.25)) +",
        "+ ",
        "    facet_wrap(~year)+",
        "+ ",
        "    theme_bw() +",
        "+ ",
        "    geom_errorbar(aes(ymin = abundance - se,",
        "+ ",
        "                      ymax = abundance + se), ",
        "+ ",
        "                  width = 0,",
        "+ ",
        "                  size = 1,",
        "+ ",
        "                  position = position_dodge(width = 0.25)) +",
        "+ ",
        "    theme(axis.text.x      = element_text(size = 10, angle = 45, hjust = 1),",
        "+ ",
        "          #legend.position  = \"none\",",
        "+ ",
        "          panel.grid.major = element_blank(),",
        "+ ",
        "          panel.grid.minor = element_blank(),",
        "+ ",
        "          text             = element_text(size = 13, vjust = 0.1)) +",
        "+ ",
        "    labs(x = \"Month\", y = expression(Density ~ \"(mean count/0.065m\"^\"2)\"))",
        "+ ",
        "}",
        "> ",
        "#execute above function",
        "> ",
        "abundance_seasonal(\"bama\")",
        "> ",
        "abundance_seasonal(\"umac\")",
        "> ",
        "abundance_seasonal(\"beno\")",
        "> ",
        "rm(list=ls())",
        "> ",
        "#load packages",
        "> ",
        "library(\"tidyverse\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "#load packages",
        "> ",
        "library(\"tidyverse\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "#load packages",
        "> ",
        "library(\"tidyverse\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "#load packages",
        "> ",
        "library(\"tidyverse\", lib.loc=\"~/R/win-library/3.4\")",
        "> ",
        "sessionInfo()",
        "R version 3.4.2 (2017-09-28)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows >= 8 x64 (build 9200)\n\nMatrix products: default\n\nlocale:\n[1] LC_COLLATE=English_United States.1252 \n[2] LC_CTYPE=English_United States.1252   \n[3] LC_MONETARY=English_United States.1252\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.1252    \n\nattached base packages:\n[1] tcltk     stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] bindrcpp_0.2       ",
        " TropFishR_1.2       lubridate_1.7.1    \n [4] magrittr_1.5        markdown_0.8        yaml_2.1.14        \n [7] knitr_1.17          BiodiversityR_2.8-4 vegan_2.4-4        \n[10] lattice_0.20-35     permute_0.9-4       dplyr_0.7.4        \n[13] purrr_0.2.3         readr_1.1.1         tidyr_0.7.1        \n[16] tibble_1.3.4        ggplot2_2.2.1       tidyverse_1.1.1    \n\nloaded via a namespace (and not attached):\n  [1] minqa_1.2.4         colorspace_1.3-2    class_7.3-14       \n  [4] rprojroot_1.2       htmlTable_1.9      ",
        " base64enc_0.1-3    \n  [7] MatrixModels_0.4-1  mvtnorm_1.0-6       xml2_1.1.1         \n [10] codetools_0.2-15    splines_3.4.2       mnormt_1.5-5       \n [13] doParallel_1.0.11   propagate_1.0-5     effects_4.0-0      \n [16] Formula_1.2-2       jsonlite_1.5        nloptr_1.0.4       \n [19] pbkrtest_0.4-7      broom_0.4.2         cluster_2.0.6      \n [22] Rcmdr_2.4-1         compiler_3.4.2      httr_1.3.1         \n [25] backports_1.1.1     assertthat_0.2.0    Matrix_1.2-11      \n [28] lazyeval_0.2.0      gmm_1.6-1          ",
        " survey_3.32-1      \n [31] tcltk2_1.2-11       acepack_1.4.1       htmltools_0.3.6    \n [34] quantreg_5.34       tools_3.4.2         gtable_0.2.0       \n [37] glue_1.1.1          reshape2_1.4.2      Rcpp_0.12.13       \n [40] msm_1.6.5           carData_3.0-0       GA_3.0.2           \n [43] cellranger_1.1.0    nlme_3.1-131        iterators_1.0.9    \n [46] psych_1.7.8         tmvtnorm_1.4-10     stringr_1.2.0      \n [49] lme4_1.1-14         rvest_0.3.2         RcmdrMisc_1.0-6    \n [52] MASS_7.3-47         zoo_1.8-0          ",
        " scales_0.5.0       \n [55] hms_0.3             parallel_3.4.2      sandwich_2.4-0     \n [58] SparseM_1.77        expm_0.999-2        RColorBrewer_1.1-2 \n [61] gridExtra_2.3       rpart_4.1-11        latticeExtra_0.6-28\n [64] stringi_1.1.5       highr_0.6           foreach_1.4.4      \n [67] nortest_1.0-4       e1071_1.6-8         checkmate_1.8.5    \n [70] GenSA_1.1.6         rlang_0.1.2         pkgconfig_2.0.1    \n [73] evaluate_0.10.1     bindr_0.1           labeling_0.3       \n [76] htmlwidgets_0.9     tidyselect_0.2.2   ",
        " bit_1.1-12         \n [79] plyr_1.8.4          R6_2.2.2            Hmisc_4.0-3        \n [82] haven_1.1.0         foreign_0.8-69      mgcv_1.8-20        \n [85] survival_2.41-3     abind_1.4-5         nnet_7.3-12        \n [88] modelr_0.1.1        car_2.1-5           relimp_1.0-5       \n [91] rmarkdown_1.6       grid_3.4.2          readxl_1.0.0       \n [94] minpack.lm_1.2-1    data.table_1.10.4-3 forcats_0.2.0      \n [97] digest_0.6.12       ff_2.2-13           stats4_3.4.2       \n[100] munsell_0.4.3      \n\nRestarting R session...\n\n"
    ],
    "type" : [
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2
    ]
}